volatile uint8_t data;

void UART_Handler (void) __attribute__ ((weak));
void UART_Handler(void) {
 
  if (UART->UART_SR & UART_SR_RXRDY) {

    data = UART->UART_RHR;
  }
}

void setup() {
   PMC->PMC_PCER0 = PMC_PCER0_PID8;  // UART power ON

  // Reset and disable receiver & transmitter
  UART->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX | UART_CR_RXDIS | UART_CR_TXDIS;

  // Set the baudrate to 250000
  UART->UART_BRGR = 21; // 84 000 000 / 16 * x = BaudRate (write x into UART_BRGR)

  // No Parity
  UART->UART_MR = UART_MR_PAR_NO;

  // Disable PDC channel requests
  UART->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;

  // Disable / Enable interrupts on end of receive
  UART->UART_IDR = 0xFFFFFFFF;
  UART->UART_IER = UART_IER_RXRDY;
  NVIC_EnableIRQ((IRQn_Type) ID_UART);

  // Enable receiver and transmitter
  UART->UART_CR = UART_CR_RXEN | UART_CR_TXEN;

}

void loop() {

}